数据在计算机上存储的时候，存储的是二进制
\0 为转义字符 用于字符串的结束标志
#include <stdio.h>
int main()
{
    char arr1[] = "abc"; //数组              //abc
    "abc" - 'a','b','c','\0'   ---'\0'字符串的结束标志
    char arr2[] = {'a','b','c','\0'};         //abc
    printf("%s\n",arr1);
    printf("%s\n",arr2);
    return 0;
}
通过使用strlen()进行字符串长度的测量来验证'\0'的存在
#include <stdio.h>
int main()
{
    char arr1[] = "abc";
    char arr2[] = {'a','b','c','\0'}  
    printf("%d\n",strlen(arr1));        //3
    printf("%d\n",strlen(arr2));        //随机
    return 0;
}

转移字符---转变原来的意思

数组的访问
#include<stdio.h>
int main()
{
    int arr[10] = {1,2,3,4,5,6,7,8,9,10};
    int i = 0;
    while(i<10)
    {
        printf("%d ",arr[i]);
        i++;
    }
    return 0;
}
后置++ 与 前置++
//后置++ 先使用，后++
//前置++  先++，后使用
#include <stdio.h>
int main()
{
    int a = 10;
    int b = a++;        //后置++ 先使用，后++
    printf("a=%d b=%d\n", a, b);    //a = 11 , b = 10
    
    int b = ++a;        //前置++  先++，后使用
    printf("a=%d b=%d\n", a, b);    //a = 11 , b = 11
    
    return 0;
}
C语言中表示真假的表示
真  -  非0
假  -  0
&& -  逻辑与    a&&b  判断a与b 都为真才为真
|| - 逻辑或        a&&b  判断a与b 有一真则为真
#include <stdio.h>
int main()
{
    int a = 0;
    int b = 1;
    //int c = a && b;
    int c = a || b;
    printf("c=%d \n", c);
    return 0;
}
条件操作符（三木操作符）
exp1 ? exp2 : exp3;
exp均为表达式，exp1如果为真，则执行exp2，否则执行exp3
#include <stdio.h>
int main()
{
    int a = 10;
    int b = 20;
    int max = 0;
    max = (a > b ? a : b);
    printf("max=%d \n", max);
    return 0;
}
逗号表达式
exp1，exp2，exp3，...expN
[] - 下标引用操作符
() - 函数调用操作符

static 修饰局部变量
局部变量的生命周期变长
static修饰全局变量
改变了全局变量的作用域 - 让静态的全局变量只能在自己所在的源文件内部使用，出了源文件就使用不了了
static修饰函数
改变了函数的链接属性 - 内部链接属性-->外部链接属性
extern 声明外部符号
static int g_val = 2023;

#include <stdio.h>
int main()
{
    //extern - 声明外部符号的
    extern int g_val;
    printf("g_val=%d\n",g_val);
    return 0;
}
#define 定义标识符常量
#include <stdio.h>
#define MAX 100
int main()
{
    int a = MAX;
    printf("a=%d\n",a);
    return 0;
}
#define 定义宏 - 带参数
#include <stdio.h>

//函数的实现
int Max(int x, int y)
{
    int z = (x > y ? x : y);
    return z;
}
//宏的定义
#define MAX(X,Y) (X > Y ? X : Y)

int main()
{
    int a = 10;
    int b = 20;
    //函数
    int max = Max(a,b);
    printf("max=%d\n",max);
    //宏方式
    max = MAX(a,b);
    printf("max=%d\n",max);
    return 0;
}
指针
&a - 用于取出a的地址
有一种变量是用来存档地址的指针变量 - 用int* 来定义
* - 解引用操作符
#include <stdio.h>
int main()
{
    int a = 10; //4个字节
    //&a - 用于取出a的地址
    int* p = &a;    //此时p变量是用来存档地址的指针变量 - 用int/char* 来定义
    printf("%p\n",&a);
    printf("%p\n",p);
    *p = 20;    //* - 解引用操作符
    printf("a = %d\n",a);
    return 0;
}


结构体
struct - 创建一个结构体类型
